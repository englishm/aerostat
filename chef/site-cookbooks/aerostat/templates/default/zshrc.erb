source /etc/profile
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000000
setopt appendhistory autocd extendedglob
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '<%= $pilot_home_path%>/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# Lines configured by me
export PATH=vendor/bundle/bin:~/bin:$PATH
export EDITOR=vim
# export EDITOR=emacs

# Go Programming Language env vars
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# Theme from: https://gist.github.com/mislav/1712320
autoload colors; colors;
export LSCOLORS="Gxfxcxdxbxegedabagacad"
setopt prompt_subst
ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}%{$fg[green]%}["
ZSH_THEME_GIT_PROMPT_SUFFIX="]%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[red]%}*%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN=""
parse_git_branch() {
    (command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null
}
parse_git_dirty() {
  if command git diff-index --quiet HEAD 2> /dev/null; then
    echo "$ZSH_THEME_GIT_PROMPT_CLEAN"
  else
    echo "$ZSH_THEME_GIT_PROMPT_DIRTY"
  fi
}
git_custom_status() {
  local git_where="$(parse_git_branch)"
  [ -n "$git_where" ] && echo "$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_PREFIX${git_where#(refs/heads/|tags/)}$ZSH_THEME_GIT_PROMPT_SUFFIX"
}
rbenv_version_status() {
  local ver=$(rbenv version-name)
  [ "$(rbenv global)" != "$ver" ] && echo "[$ver]"
}
if which rbenv &> /dev/null; then
  RPS1='$(git_custom_status)%{$fg[red]%}$(rbenv_version_status)%{$reset_color%} $EPS1'
else
  RPS1='$(git_custom_status) $EPS1'
fi
PROMPT='%{$fg[cyan]%}%~% %(?.%{$fg[green]%}.%{$fg[red]%})%B$%b '
# End of theme from: https://gist.github.com/mislav/1712320

# Pairing!
function pairwith(){ 
  sudo su - <%= $copilot_username %> -c "gh-auth add $1" 
  echo "Tell '$1' to connect using one of the following commands:"
  echo "[read-only access to session]: \`ssh <%= $copilot_username %>@<%= node["aerostat"]["fqdn"]%> -t wemux\`"
  echo "[read-write access to session]: \`ssh <%= $copilot_username %>@<%= node["aerostat"]["fqdn"]%> -t wemux pair\`"
}
function unpair(){sudo su - copilot -c "rm /home/copilot/.ssh/authorized_keys && touch /home/copilot/.ssh/authorized_keys"}

alias ac="pushd ~/git/aerostat && cap aerostat chef && popd"

# Certs
export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt

# Secrets
. ~/.secrets
# End of lines configured by me
